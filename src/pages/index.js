import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import styles from '../styles/Home.module.css';
import '../styles/globals.css';
import Header from '../components/Header';
import Footer from '../components/Footer';
import { fetchIktitabat } from '../lib/Iktitabat';
import { fetchWallets } from '../lib/digitalWallets';
import { fetchTamweel } from '../lib/tamweel';

export async function getServerSideProps() {
  try {
    const iktitabat = await fetchIktitabat();
    const wallets = await fetchWallets();
    const tamweel = await fetchTamweel();

    const latestIktitabat = iktitabat.sort((a, b) => b.id - a.id).slice(0, 4);
    const latestWallets = wallets.sort((a, b) => b.id - a.id).slice(0, 4);
    const latestTamweel = tamweel.sort((a, b) => b.id - a.id).slice(0, 4);

    return {
      props: {
        iktitabat: latestIktitabat,
        wallets: latestWallets,
        tamweel: latestTamweel,
      },
    };
  } catch (error) {
    console.error('Error fetching data:', error);
    return {
      props: {
        iktitabat: [],
        wallets: [],
        tamweel: [],
      },
    };
  }
}

export default function Home({ iktitabat, wallets, tamweel }) {
  const [isTablet, setIsTablet] = useState(false);
  const router = useRouter();

  useEffect(() => {
    const handleResize = () => {
      // Check if screen width is between 768px and 1024px (typical tablet size)
      setIsTablet(window.innerWidth >= 768 && window.innerWidth <= 1200);
    };

    // Add resize event listener
    window.addEventListener('resize', handleResize);

    // Call resize function on initial load
    handleResize();

    // Clean up event listener on component unmount
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  const handleButtonClick = (url) => {
    if (url) {
      window.open(url, '_blank', 'noopener,noreferrer');
    }
  };

  const handleNavigation = (path) => {
    router.push(path);
  };

  // Determine the number of cards to display
  const displayCount = isTablet ? 3 : 4;

  return (
    <div className="container homeContainer">
      <Head>
        <meta name="robots" content="noindex" />
        <title>مخبات</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="main">
        <div className="textSection">
          <p>كل استثماراتك في</p>
          <p>مخبات</p>
        </div>
        <div className="arrow">
          <img src="images/down arrow.svg" alt="Arrow" />
        </div>
        
        {/* First Cards Section */}
        <div className="cardsSection">
          <div className="sectionHeader">
            <h3>الاكتتابات</h3>
          </div>
          <div
            className= "leftText noLinkStyle"
            onClick={() => handleNavigation('/Iktitabat')}
          >
            اعرض كل الفرص
          </div>
          <div className={styles.iktitabatCardRow}>
            {iktitabat.slice(0, displayCount).map((item) => (
              <div key={item.id} className={styles.card}>
                <div className={styles.cardLogo}>
                  <img src={item.companyLogo} alt="Company Logo" />
                </div>
                <h3>{item.companyName}</h3>
                <div className={styles.cardContent}>
                  <div className={styles.separator}></div>
                  <p>{item.connections}</p>
                  <p className={styles.label}>{item.date}</p>
                  <div className={styles.banks}>
                    <p>البنوك المستلمة</p>
                    <div className={styles.bankLogos}>
                      {item.banksLogo.map((logo, index) => (
                        <img key={index} src={logo} alt={`Bank ${index + 1}`} />
                      ))}
                    </div>
                  </div>
                  <button onClick={() => handleButtonClick(item.link)}>اعرض الفرصة</button>
                </div>
              </div>
            ))}
          </div>
        </div>
        
        {/* Second Cards Section */}
        <div className="cardsSection">
          <div className="sectionHeader">
            <h3>المحافظ الرقمية</h3>
          </div>
          <div
            className= "leftText noLinkStyle"
            onClick={() => handleNavigation('/wallets')}
          >
            اعرض كل الفرص
          </div>
          <div className={styles.cardRow}>
            {wallets.slice(0, displayCount).map((item) => (
              <div key={item.id} className={styles.simpleCard}>
                <div className={styles.cardLogo}>
                  <img src={item.companyLogo} alt="Company Logo" />
                </div>
                <h3>{item.companyName}</h3>
                <button 
                  className={styles.walletsNoLinkStyle } 
                  onClick={() => handleButtonClick(item.websiteLink)}
                >
                  اعرض الفرصة
                </button>
              </div>
            ))}
          </div>
        </div>
        
        {/* Third Cards Section */}
        <div className="cardsSection">
          <div className="sectionHeader">
            <h3>منصات التمويل</h3>
          </div>
          <div
            className= "leftText noLinkStyle"
            onClick={() => handleNavigation('/tamweel')}
          >
            اعرض كل الفرص
          </div>
          <div className={`${styles.tamweelCardRow} ${styles.tamweelCardRowMobile}`}>
            {tamweel.slice(0, displayCount).map((item) => (
              <div key={item.id} className={styles.detailedCard}>
                <div className={styles.cardLogo}>
                  <img src={item.companyLogo} alt="Company Logo" />
                </div>
                <div className={styles.cardContent}>
                  <h3>{item.companyName}</h3>
                  <div className={styles.separator}></div>
                  <p className={styles.label}>{item.date}</p> 
                  <p className={styles.label}>{item.connections}</p>
                  <p className={styles.label}>{item.profitType}</p>
                </div>
                <div className={styles.cardContent}>
                  <p className={styles.label}>{item.benefitPercentage}</p>
                  <p className={styles.label}>{item.opportunitySize}</p>
                  <button onClick={() => handleButtonClick(item.link)}>اعرض الفرصة</button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </main>

      <Footer />
    </div> 
  );
}
